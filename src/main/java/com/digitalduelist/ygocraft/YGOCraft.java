package com.digitalduelist.ygocraft;

import static com.digitalduelist.ygocraft.core.YGOConstants.MOD_AUTHORS;
import static com.digitalduelist.ygocraft.core.YGOConstants.MOD_CREDITS;
import static com.digitalduelist.ygocraft.core.YGOConstants.MOD_DESCRIPTION;
import static com.digitalduelist.ygocraft.core.YGOConstants.MOD_ID;
import static com.digitalduelist.ygocraft.core.YGOConstants.MOD_NAME;
import static com.digitalduelist.ygocraft.core.YGOConstants.MOD_VERSION;
import static com.digitalduelist.ygocraft.core.YGOConstants.MOD_VERSION_SUB;

import java.io.File;
import java.util.Arrays;

import com.digitalduelist.ygocraft.api.YGOAPI;
import com.digitalduelist.ygocraft.core.YGOConfig;
import com.digitalduelist.ygocraft.core.impl.YGOAPIImpl;
import com.digitalduelist.ygocraft.util.YGOLog;
import com.digitalduelist.ygocraft.util.java.JavaHelper;
import com.digitalduelist.ygocraft.util.java.reflected.ReflectedObject;

import cpw.mods.fml.common.FMLModContainer;
import cpw.mods.fml.common.Loader;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.ModContainer.Disableable;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.event.FMLConstructionEvent;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;

/**
 * Main mod class
 * 
 * @author DigitalDuelist, tim4242
 */
@Mod(modid = MOD_ID, name = MOD_NAME, version = MOD_VERSION_SUB)
public class YGOCraft
{

	/**
	 * Main instance of this class
	 */
	public static final YGOCraft INSTANCE = new YGOCraft();

	/**
	 * Mod metadata, DO NOT EDIT
	 */
	@Mod.Metadata
	public static ModMetadata METADATA;

	/**
	 * Internal singleton constructor
	 */
	private YGOCraft()
	{
		// Log initialization
		YGOLog.init();
	}

	/**
	 * @return {@link YGOCraft#INSTANCE The main instance}
	 */
	@Mod.InstanceFactory
	public static YGOCraft instance()
	{
		return INSTANCE;
	}

	/**
	 * The main {@link YGOConfig YGOConfig instance}
	 */
	private YGOConfig m_config;

	/**
	 * Mod construction event handler
	 * 
	 * @param event
	 *            The given {@link FMLConstructionEvent} event
	 */
	@Mod.EventHandler
	public void construction(FMLConstructionEvent event)
	{
		// API setup
		YGOAPI.setup(new YGOAPIImpl());
	}

	/**
	 * Mod pre initialization event handler
	 * 
	 * @param event
	 *            The given {@link FMLPreInitializationEvent} event
	 */
	@Mod.EventHandler
	public void preInit(FMLPreInitializationEvent event)
	{
		// Config setup
		m_config = new YGOConfig(new File(event.getModConfigurationDirectory(), MOD_ID + ".cfg"));

		m_config.reload();

		// Mod information debug output
		YGOLog.debug(JavaHelper.boxInString("Initializing YGOCraft", JavaHelper.BOX_SEPERATOR, "Mod Name: " + MOD_NAME, "Mod ID: " + MOD_ID, "Mod Version: " + MOD_VERSION + " \"" + MOD_VERSION_SUB + "\""));

		// Metadata and OCD prevention
		setupMetadata();

		if(m_config.getOCD())
			setDisableability();
	}

	/**
	 * Mod initialization event handler
	 * 
	 * @param event
	 *            The given {@link FMLInitializationEvent} event
	 */
	@Mod.EventHandler
	public void init(FMLInitializationEvent event)
	{

	}

	/**
	 * Mod post initialization event handler
	 * 
	 * @param event
	 *            The given {@link FMLPostInitializationEvent} event
	 */
	@Mod.EventHandler
	public void postInit(FMLPostInitializationEvent event)
	{

	}

	/**
	 * @return {@link YGOCraft#m_config The main config instance}
	 */
	public YGOConfig getConfig()
	{
		return m_config;
	}

	/**
	 * Metadata setup
	 */
	private void setupMetadata()
	{
		METADATA.autogenerated = false;
		METADATA.modId = MOD_ID;
		METADATA.name = MOD_NAME;
		METADATA.version = MOD_VERSION;
		METADATA.description = MOD_DESCRIPTION;
		METADATA.authorList = Arrays.<String> asList(MOD_AUTHORS);
		METADATA.credits = MOD_CREDITS;
	}

	/**
	 * OCD Prevention No 1
	 *
	 * Sets the Disable ability to NEVER to disable the button in the mod menu
	 */
	private void setDisableability()
	{
		if(Loader.instance().activeModContainer() instanceof FMLModContainer)
		{
			ReflectedObject.$(Loader.instance().activeModContainer()).findField("disableability").set(ReflectedObject.$(Disableable.NEVER));
		}
	}
}
